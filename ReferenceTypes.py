import support
import pickle

#### Prime Types

R2 = [[2,[[1,0]]]]
R3 = [[3,[[1,0]]]]
R5 = [[5,[[1,0]]]]
R7 = [[7,[[1,0]]]]
R11 = [[11,[[1,0]]]]
R13 = [[13,[[1,0]]]]

#### Type Weight Dictionary
##   Key = Weight
##   Entry = List of minimal vanishing types of that weight

refTypesMap = { 
                 0: [],
    
                 1: [],
    
                 2: [ R2 ],
    
                 3: [ R3 ],
    
                 4: [],
                 
                 5: [ R5 ],
                 
                 6: [
                        [[5,[[1,0]], R3 ]]
                    ],
                 
                 7: [
                        R7,
                        [[5,[[1,0]], R3, R3 ]]
                    ],
                 
                 8: [
                        [[7,[[1,0]], R3 ]],
                        [[5,[[1,0]], R3, R3, R3 ]]
                    ],
                 
                 9: [
                        [[7,[[1,0]], R3, R3 ]],
                        [[5,[[1,0]], R3, R3, R3, R3 ]]
                    ],
                 
                 10: [
                        [[7,[[1,0]], R5 ]],
                        [[7,[[1,0]], R3, R3, R3 ]]
                     ],
                 
                 11: [
                        R11,
                        [[7,[[1,0]], [[5,[[1,0]], R3 ]] ]],
                        [[7,[[1,0]], R5, R3 ]],
                        [[7,[[1,0]], R3, R3, R3, R3 ]]
                     ],
                 
                 12: [
                        [[11,[[1,0]], R3 ]],
                        [[7,[[1,0]], [[5,[[1,0]], R3, R3 ]] ]],
                        [[7,[[1,0]], R3, [[5,[[1,0]], R3 ]] ]],
                        [[7,[[1,0]], R3, R3, R5 ]],
                        [[7,[[1,0]], R3, R3, R3, R3, R3]]
                     ]
                 
                 # 13: [
                 #        R13,
                 #        [[11,[[1,0]], R3, R3 ]],
                 #        [[7,[[1,0]], R3, [[5,[[1,0]], R3, R3, R3 ]] ]],
                 #        [[7,[[1,0]], R5, R5 ]],
                 #        [[7,[[1,0]], R3, R3, [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0]], R3, R3, R3, R5 ]],
                 #        [[7,[[1,0]], R3, R3, R3, R3, R3, R3]]
                 #     ],
                 
                 # 14: [
                 #        [[13,[[1,0]], R3 ]],
                 #        [[11,[[1,0]], R5 ]],
                 #        [[11,[[1,0]], R3, R3, R3]],
                 #        [[7,[[1,0]], [[5,[[1,0]], R3, R3, R3, R3 ]] ]],
                 #        [[7,[[1,0]], R3, [[5,[[1,0]], R3, R3, R3 ]] ]],
                 #        [[7,[[1,0]], R5, [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0]], R3, R3, [[5,[[1,0]], R3, R3 ]] ]],
                 #        [[7,[[1,0]], R3, R3, R3, R3, R5 ]],
                 #        # [[7,[[1,0]], R3, R3, R3, R3, R3, R3 ]]
                 #     ],
                 
                 # 15: [
                 #        [[13,[[1,0]], R3, R3 ]],
                 #        [[11,[[1,0]], [[5,[[1,0]], R3 ]] ]],
                 #        [[11,[[1,0]], R3, R5 ]],
                 #        [[11,[[1,0]], R3, R3, R3, R3 ]],
                 #        [[7,[[1,0]], R3, [[5,[[1,0]], R3, R3, R3, R3 ]] ]],
                 #        [[7,[[1,0]], R5, [[5,[[1,0]], R3, R3 ]] ]],
                 #        [[7,[[1,0]], [[5,[[1,0]], R3 ]], [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0]], R3, R3, [[5,[[1,0]], R3, R3, R3 ]] ]],
                 #        [[7,[[1,0]], R3, R5, [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0]], R3, R3, R3, [[5,[[1,0]], R3, R3 ]] ]],
                 #        [[7,[[1,0]], R3, R3, R5, R5 ]],
                 #        [[7,[[1,0]], R3, R3, R3, R3, [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0]], R3, R3, R3, R3, R3, R5 ]],
                 #        [[7,[[1,0],[5,1]], R5 ]],
                 #        [[7,[[1,0],[5,2]], R5 ]]
                 #     ],
                 
                 # 16: [
                 #        [[13,[[1,0]], R5 ]],
                 #        [[13,[[1,0]], R3, R3, R3 ]],
                 #        [[11,[[1,0]], R7 ]],
                 #        [[11,[[1,0]], [[5,[[1,0]], R3, R3 ]] ]],
                 #        [[11,[[1,0]], R3, [[5,[[1,0]], R3 ]] ]],
                 #        [[11,[[1,0]], R3, R3, R5 ]],
                 #        [[11,[[1,0]], R3, R3, R3, R3, R3 ]],
                 #        [[7,[[1,0]], R5, [[5,[[1,0]], R3, R3, R3 ]] ]],
                 #        [[7,[[1,0]], [[5,[[1,0]],R3]], [[5,[[1,0]],R3]], R3]],
                 #        [[7,[[1,0]], R5, R5, R5]],
                 #        [[7,[[1,0]], [[5,[[1,0]], R3 ]], [[5,[[1,0]], R3, R3 ]] ]],
                 #        [[7,[[1,0]], R3, R3, [[5,[[1,0]], R3, R3, R3, R3 ]] ]],
                 #        [[7,[[1,0]], R3, R5, [[5,[[1,0]], R3, R3 ]] ]],
                 #        [[7,[[1,0]], R3, R3, R3, R3, [[5,[[1,0]], R3, R3 ]] ]],
                 #        [[7,[[1,0]], R3, R3, R3, R5, R5 ]],
                 #        [[7,[[1,0]], R3, R3, R3, R3, R3, [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0],[3,1]], [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0],[5,1]], [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0],[5,2]], [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0],[30,1]], [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0],[30,7]], [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0],[30,13]], [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0],[30,19]], [[5,[[1,0]], R3 ]] ]],
                 #        [[7,[[1,0],[5,1]], R2 + R3, R5 ]],
                 #        [[7,[[1,0],[5,2]], R2 + R3, R5 ]],
                 #        [[7,[[1,0],[5,1]], R5, R5 ]],
                 #        [[7,[[1,0],[5,2]], R5, R5 ]]
                 #     ]
              }

def main ():

    print("Rewriting to reference type list")

    #### A list of lists of mininal vanishing types up to weight 16,
    #### Indicies correspond to weights
    refTypeList = [ refTypesMap[i] for i in range(13) ] 

    typeList = []

    for item in refTypeList:
        typeList += item


    with open('types.txt', 'wb') as rt:
        #### Reset the reference type list
        pickle.dump(typeList, rt)

    print("Finished rewrite")
    print("Written Types until weight: {}".format(support.findWeightofType(typeList[-1])))
    return 0

if __name__ == '__main__':
    main()

